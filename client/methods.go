// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "krak8s": methods Resource Client
//
// Command:
// $ goagen
// --design=krak8s/design
// --out=$(GOPATH)/src/krak8s
// --version=v1.2.0-dirty

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// DeployMethodsPath computes a request path to the deploy action of methods.
func DeployMethodsPath(client_ string, namespace string) string {
	param0 := client_
	param1 := namespace

	return fmt.Sprintf("/deploy/%s/%s", param0, param1)
}

// deploy MongoDB for client to namespace
func (c *Client) DeployMethods(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewDeployMethodsRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewDeployMethodsRequest create the request corresponding to the deploy action endpoint of the methods resource.
func (c *Client) NewDeployMethodsRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
