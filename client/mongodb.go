// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "krak8s": mongodb Resource Client
//
// Command:
// $ goagen
// --design=krak8s/design
// --out=$(GOPATH)/src/krak8s
// --version=v1.2.0-dirty

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// DeployMongodbPath computes a request path to the deploy action of mongodb.
func DeployMongodbPath() string {

	return fmt.Sprintf("/v1/mongo/")
}

// deploy MongoDB for client to namespace
func (c *Client) DeployMongodb(ctx context.Context, path string, client_ *string, ns *string) (*http.Response, error) {
	req, err := c.NewDeployMongodbRequest(ctx, path, client_, ns)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewDeployMongodbRequest create the request corresponding to the deploy action endpoint of the mongodb resource.
func (c *Client) NewDeployMongodbRequest(ctx context.Context, path string, client_ *string, ns *string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	values := u.Query()
	if client_ != nil {
		values.Set("client", *client_)
	}
	if ns != nil {
		values.Set("ns", *ns)
	}
	u.RawQuery = values.Encode()
	req, err := http.NewRequest("POST", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
